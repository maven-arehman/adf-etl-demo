{
	"name": "salesDataFlow",
	"properties": {
		"folder": {
			"name": "etl"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "tabSalesRegister",
						"type": "DatasetReference"
					},
					"name": "SalesRegister"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "tabItems",
						"type": "DatasetReference"
					},
					"name": "itemsOnDB"
				},
				{
					"dataset": {
						"referenceName": "tabSalesInvoice",
						"type": "DatasetReference"
					},
					"name": "InvoiceOnDB"
				},
				{
					"dataset": {
						"referenceName": "tabSalesInvoiceDetails",
						"type": "DatasetReference"
					},
					"name": "InvoiceDetailsOnDB"
				},
				{
					"dataset": {
						"referenceName": "tabCustomer",
						"type": "DatasetReference"
					},
					"name": "CustomersOnDB"
				}
			],
			"transformations": [
				{
					"name": "DistinctItems"
				},
				{
					"name": "SelectItemColumns"
				},
				{
					"name": "SelectInvoiceColumn"
				},
				{
					"name": "GenerateTotals"
				},
				{
					"name": "SalesInvDetColumns"
				},
				{
					"name": "CustomerColumns"
				},
				{
					"name": "DistinctCustomers"
				}
			],
			"script": "source(output(\n\t\tDate as timestamp,\n\t\tInvoice as string,\n\t\tCustomer as string,\n\t\tAddress as string,\n\t\tItem as string,\n\t\tQty as double,\n\t\tUoM as string,\n\t\tRate as double,\n\t\tGrossAmount as double,\n\t\tTaxRate as double,\n\t\tTaxAmount as double,\n\t\tNetAmount as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tdateFormats: ['dd/MM/yyyy'],\n\tpartitionBy('hash', 1)) ~> SalesRegister\nSelectItemColumns aggregate(groupBy(Item,\n\t\tUoM),\n\teach(match(!in(['Item','UoM'],name)), $$ = first($$))) ~> DistinctItems\nSalesRegister select(mapColumn(\n\t\tItem,\n\t\tUoM\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectItemColumns\nSalesRegister select(mapColumn(\n\t\tDate,\n\t\tInvoice,\n\t\tCustomer,\n\t\tGrossAmount,\n\t\tTaxAmount,\n\t\tNetAmount\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvoiceColumn\nSelectInvoiceColumn aggregate(groupBy(Date,\n\t\tInvoice,\n\t\tCustomer),\n\tTotalGrossAmount = sum(GrossAmount),\n\t\tTotalTaxAmount = sum(TaxAmount),\n\t\tTotalNetAmount = sum(NetAmount)) ~> GenerateTotals\nSalesRegister select(mapColumn(\n\t\tInvoice,\n\t\tItem,\n\t\tQty,\n\t\tUoM,\n\t\tRate,\n\t\tGrossAmount,\n\t\tTaxRate,\n\t\tTaxAmount,\n\t\tNetAmount\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SalesInvDetColumns\nSalesRegister select(mapColumn(\n\t\tCustomer,\n\t\tAddress\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CustomerColumns\nCustomerColumns aggregate(groupBy(Customer,\n\t\tAddress),\n\teach(match(!in(['Customer','Address'],name)), $$ = first($$))) ~> DistinctCustomers\nDistinctItems sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\titem as string,\n\t\tuom as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\titem = Item,\n\t\tuom = UoM\n\t)) ~> itemsOnDB\nGenerateTotals sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDate as timestamp,\n\t\tInvoiceNo as string,\n\t\tCustomer as string,\n\t\tTotalGrossAmount as decimal(10,2),\n\t\tTotalTaxAmount as decimal(10,2),\n\t\tTotalNetAmount as decimal(10,2)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tDate,\n\t\tInvoiceNo = Invoice,\n\t\tCustomer,\n\t\tTotalGrossAmount,\n\t\tTotalTaxAmount,\n\t\tTotalNetAmount\n\t)) ~> InvoiceOnDB\nSalesInvDetColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tid as integer,\n\t\tInvoiceNo as string,\n\t\tItem as string,\n\t\tQty as decimal(10,2),\n\t\tUoM as string,\n\t\tRate as decimal(10,2),\n\t\tGrossAmount as decimal(10,2),\n\t\tTaxRate as decimal(10,2),\n\t\tTaxAmount as decimal(10,2),\n\t\tNetAmount as decimal(10,2)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tInvoiceNo = Invoice,\n\t\tItem,\n\t\tQty,\n\t\tUoM,\n\t\tRate,\n\t\tGrossAmount,\n\t\tTaxRate,\n\t\tTaxAmount,\n\t\tNetAmount\n\t)) ~> InvoiceDetailsOnDB\nDistinctCustomers sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCustomer as string,\n\t\tAddress as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CustomersOnDB"
		}
	}
}