{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "etladfdemo"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureMySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql1'"
		},
		"onSalesRegisterUpload_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ef27388f-d06e-473d-a0f0-81e304bbb66b/resourceGroups/etl/providers/Microsoft.Storage/storageAccounts/etldemo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"dbName": {
						"type": "string",
						"defaultValue": "etl"
					}
				},
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesTaxRegisterInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "etl"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "input",
						"container": "etl"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tabCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql1",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "etl"
					}
				},
				"folder": {
					"name": "etl"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "Customer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Address",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tabItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql1",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "etl"
					}
				},
				"folder": {
					"name": "etl"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "item",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "uom",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "items"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tabSalesInvoice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql1",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "etl"
					}
				},
				"folder": {
					"name": "etl"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "Date",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "InvoiceNo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Customer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TotalGrossAmount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "TotalTaxAmount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "TotalNetAmount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"tableName": "salesinvoice"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tabSalesInvoiceDetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql1",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "etl"
					}
				},
				"folder": {
					"name": "etl"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "InvoiceNo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Item",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Qty",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "UoM",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Rate",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "GrossAmount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "NetAmount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"tableName": "salesinvoicedetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tabSalesRegister')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql1",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "etl"
					}
				},
				"folder": {
					"name": "etl"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "Date",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Invoice",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Customer",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Address",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Item",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Qty",
						"type": "float",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "UoM",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Rate",
						"type": "float",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "GrossAmount",
						"type": "float",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "float",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "float",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "NetAmount",
						"type": "float",
						"precision": 0,
						"scale": 2
					}
				],
				"typeProperties": {
					"tableName": "salesregister"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/salesDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "etl"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tabSalesRegister",
								"type": "DatasetReference"
							},
							"name": "SalesRegister"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tabItems",
								"type": "DatasetReference"
							},
							"name": "itemsOnDB"
						},
						{
							"dataset": {
								"referenceName": "tabSalesInvoice",
								"type": "DatasetReference"
							},
							"name": "InvoiceOnDB"
						},
						{
							"dataset": {
								"referenceName": "tabSalesInvoiceDetails",
								"type": "DatasetReference"
							},
							"name": "InvoiceDetailsOnDB"
						},
						{
							"dataset": {
								"referenceName": "tabCustomer",
								"type": "DatasetReference"
							},
							"name": "CustomersOnDB"
						}
					],
					"transformations": [
						{
							"name": "DistinctItems"
						},
						{
							"name": "SelectItemColumns"
						},
						{
							"name": "SelectInvoiceColumn"
						},
						{
							"name": "GenerateTotals"
						},
						{
							"name": "SalesInvDetColumns"
						},
						{
							"name": "CustomerColumns"
						},
						{
							"name": "DistinctCustomers"
						}
					],
					"script": "source(output(\n\t\tDate as timestamp,\n\t\tInvoice as string,\n\t\tCustomer as string,\n\t\tAddress as string,\n\t\tItem as string,\n\t\tQty as double,\n\t\tUoM as string,\n\t\tRate as double,\n\t\tGrossAmount as double,\n\t\tTaxRate as double,\n\t\tTaxAmount as double,\n\t\tNetAmount as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tdateFormats: ['dd/MM/yyyy'],\n\tpartitionBy('hash', 1)) ~> SalesRegister\nSelectItemColumns aggregate(groupBy(Item),\n\teach(match(!in(['Item'],name)), $$ = first($$))) ~> DistinctItems\nSalesRegister select(mapColumn(\n\t\tItem,\n\t\tUoM\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectItemColumns\nSalesRegister select(mapColumn(\n\t\tDate,\n\t\tInvoice,\n\t\tCustomer,\n\t\tGrossAmount,\n\t\tTaxAmount,\n\t\tNetAmount\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvoiceColumn\nSelectInvoiceColumn aggregate(groupBy(Date,\n\t\tInvoice,\n\t\tCustomer),\n\tTotalGrossAmount = sum(GrossAmount),\n\t\tTotalTaxAmount = sum(TaxAmount),\n\t\tTotalNetAmount = sum(NetAmount)) ~> GenerateTotals\nSalesRegister select(mapColumn(\n\t\tInvoice,\n\t\tItem,\n\t\tQty,\n\t\tUoM,\n\t\tRate,\n\t\tGrossAmount,\n\t\tTaxRate,\n\t\tTaxAmount,\n\t\tNetAmount\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SalesInvDetColumns\nSalesRegister select(mapColumn(\n\t\tCustomer,\n\t\tAddress\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CustomerColumns\nCustomerColumns aggregate(groupBy(Customer,\n\t\tAddress),\n\teach(match(!in(['Customer','Address'],name)), $$ = first($$))) ~> DistinctCustomers\nDistinctItems sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\titem as string,\n\t\tuom as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\titem = Item,\n\t\tuom = UoM\n\t)) ~> itemsOnDB\nGenerateTotals sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDate as timestamp,\n\t\tInvoiceNo as string,\n\t\tCustomer as string,\n\t\tTotalGrossAmount as decimal(10,2),\n\t\tTotalTaxAmount as decimal(10,2),\n\t\tTotalNetAmount as decimal(10,2)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tDate,\n\t\tInvoiceNo = Invoice,\n\t\tCustomer,\n\t\tTotalGrossAmount,\n\t\tTotalTaxAmount,\n\t\tTotalNetAmount\n\t)) ~> InvoiceOnDB\nSalesInvDetColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tid as integer,\n\t\tInvoiceNo as string,\n\t\tItem as string,\n\t\tQty as decimal(10,2),\n\t\tUoM as string,\n\t\tRate as decimal(10,2),\n\t\tGrossAmount as decimal(10,2),\n\t\tTaxRate as decimal(10,2),\n\t\tTaxAmount as decimal(10,2),\n\t\tNetAmount as decimal(10,2)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tInvoiceNo = Invoice,\n\t\tItem,\n\t\tQty,\n\t\tUoM,\n\t\tRate,\n\t\tGrossAmount,\n\t\tTaxRate,\n\t\tTaxAmount,\n\t\tNetAmount\n\t)) ~> InvoiceDetailsOnDB\nDistinctCustomers sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCustomer as string,\n\t\tAddress as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CustomersOnDB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tabSalesRegister')]",
				"[concat(variables('factoryId'), '/datasets/tabItems')]",
				"[concat(variables('factoryId'), '/datasets/tabSalesInvoice')]",
				"[concat(variables('factoryId'), '/datasets/tabSalesInvoiceDetails')]",
				"[concat(variables('factoryId'), '/datasets/tabCustomer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/salesPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "XLSSalesRegister2DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "salesDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesRegister": {},
									"itemsOnDB": {},
									"InvoiceOnDB": {},
									"InvoiceDetailsOnDB": {},
									"CustomersOnDB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "XLSSalesRegister2DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "delete from salesregister;\ndelete from items;\ndelete from salesinvoice;\ndelete from customers;\ndelete from salesinvoicedetails;"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Invoice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Invoice",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Item",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Item",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Qty",
											"type": "Single",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "UoM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UoM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rate",
											"type": "Single",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Gross Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GrossAmount",
											"type": "Single",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Single",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Single",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Net Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NetAmount",
											"type": "Single",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "yyyy-MM-dd"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesTaxRegisterInput",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@pipeline().parameters.fileNameSR",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "tabSalesRegister",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DeleteInputFile",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "TransformData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SalesTaxRegisterInput",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@pipeline().parameters.fileNameSR",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"parameters": {
					"dbName": {
						"type": "string"
					},
					"fileNameSR": {
						"type": "string"
					}
				},
				"folder": {
					"name": "etl"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-31T09:01:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/salesDataFlow')]",
				"[concat(variables('factoryId'), '/datasets/SalesTaxRegisterInput')]",
				"[concat(variables('factoryId'), '/datasets/tabSalesRegister')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onSalesRegisterUpload')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "salesPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/etl/blobs/input/",
					"blobPathEndsWith": "sales_tax_register.xlsx",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('onSalesRegisterUpload_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/salesPipeline')]"
			]
		}
	]
}